name: Main Workflow

on:
  push:
    branches:
      - master
      - 'branch-*'
      - 'dogfood-on-*'
  pull_request:
    branches:
      - master
      - 'branch-*'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper

      - name: Export project version
        id: project_version
        run: |
          mkdir -p project-version
          PROJECTVERSION=$(./gradlew printVersion --console=plain -q)
          echo "PROJECT_VERSION=$PROJECTVERSION" >> $GITHUB_ENV
          echo "$PROJECTVERSION" > project-version/evaluated_project_version.txt

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SIGN_KEY: ${{ secrets.SIGN_KEY }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        run: |
          source .github/workflows/cirrus-env BUILD
          ./gradlew build storeProjectVersion -x test -x sonar --console=plain --no-daemon --info

      - name: Upload project version
        uses: actions/upload-artifact@v4
        with:
          name: project-version
          path: project-version/
          retention-days: 1

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper

      - name: Download project version
        uses: actions/download-artifact@v4
        with:
          name: project-version
          path: project-version/

      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          source .github/workflows/cirrus-env BUILD
          ./gradlew test sonar --console=plain --no-daemon --info -x artifactoryPublish

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/test-results/**/*.xml'

  windows_qa:
    name: Windows QA
    needs: build
    runs-on: windows-latest
    if: ${{ !github.event.pull_request || !contains(github.event.pull_request.labels.*.name, 'skip-ci') }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: wrapper

      - name: Run Windows tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source .github/workflows/cirrus-env CI
          ./gradlew test --console=plain --no-daemon --info

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-test-results
          path: '**/test-results/**/*.xml'
