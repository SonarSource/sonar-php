name: Automate release

env:
  PROJECT_KEY: 'SONARPHP'
  PROJECT_NAME: 'SonarPHP'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: '1.0.0'
      short_description:
        description: 'Short Description'
        required: true
        default: 'My new release'
      targeted_product:
        description: 'Targeted Product'
        required: true
        default: '11.0'
      sq_compatibility:
        description: 'SonarQube Compatibility'
        required: true
        default: '2025.3'
      jira_release:
        description: 'Jira release version'
        required: false

jobs:
  check_releasability:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gatekeeper.outputs.version }}
    steps:
      - name: Check Releasability and Get Version
        id: check_releasability_status
        uses: SonarSource/release-github-actions/.github/actions/check-releasability-status@SONARIAC-2113

  create_release_ticket:
    name: Create release ticket
    runs-on: ubuntu-latest
    needs: check_releasability
    permissions:
      contents: read
      id-token: write # Required for authenticating to Vault
    steps:
      - name: Get Jira Credentials from Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/kv/data/jira user | JIRA_USER;
            development/kv/data/jira token | JIRA_TOKEN;

      - name: Create Jira Release Ticket
        id: create_ticket
        uses: SonarSource/release-github-actions/.github/actions/create-jira-release-ticket@SONARIAC-2092
        with:
          jira_user: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_USER }}
          jira_token: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_TOKEN }}
          project_key: ${{ env.PROJECT_KEY }}
          project_name: ${{ env.PROJECT_NAME }}
          version: ${{ needs.check_releasability.outputs.version }}
          short_description: ${{ github.event.inputs.short_description }}
          targeted_product: ${{ github.event.inputs.targeted_product }}
          sq_compatibility: ${{ github.event.inputs.sq_compatibility }}
          jira_release: ${{ github.event.inputs.jira_release }}

      - name: Echo Ticket Key
        run: echo "The created Jira ticket key is ${{ steps.create_ticket.outputs.ticket_key }}"
